# Server Configuration
server.port=8090
server.servlet.context-path=/

# MySQL Database Configuration (instalado en disco D)
spring.datasource.url=jdbc:mysql://localhost:3306/ferry77db?useUnicode=true&characterEncoding=utf8&connectionCollation=utf8mb4_unicode_ci&serverTimezone=UTC
spring.datasource.username=ferry77
spring.datasource.password=ferry77pass
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# CORS Configuration
spring.web.cors.allow-credentials=true
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:8081,http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Logging Configuration
logging.level.com.ferry77=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Application Configuration
app.name=Ferry77 Backend
app.version=1.0.0
app.description=Backend service for Ferry77 logistics platform

# Kafka habilitado/deshabilitado (false = usa notificaciones directas)
app.kafka.enabled=false

# Email config (Gmail) - Configuraci√≥n TLS 587 con timeouts
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=j24291972@gmail.com
spring.mail.password=ufxx grvv atvb jued
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000

# Kafka Configuration para notificaciones escalables
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-processor-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.max-poll-records=500
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.batch.size=16384
spring.kafka.producer.properties.linger.ms=1
spring.kafka.producer.properties.buffer.memory=33554432

# JPA Configuration adicional para campos JSON
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true